
#include <stdio.h>
#include <stdlib.h>

int i,j,k;

void getMat(int m[10][10],int r,int c)
{
	for(i=0;i<r;i++)
		for(j=0;j<c;j++)
			scanf("%d",&m[i][j]);
}

void showMat(int m[10][10],int r,int c,char k[50])
{
	printf("\nMatrix %s :\n",k);
	for(i=0;i<r;i++)
	{	for(j=0;j<c;j++)
			printf("%d\t",m[i][j]);
		printf("\n");
	}
}

void addMat(int m1[10][10],int r1,int c1,int m2[10][10],int r2,int c2,int m3[10][10])
{
	for(i=0;i<r1;i++)
	{	for(j=0;j<c1;j++)
			m3[i][j]=m1[i][j]+m2[i][j];
	}
}

void multMat(int m1[10][10],int r1,int c1,int c2,int m2[10][10],int m4[10][10])
{
	int sum=0;
	for(i=0;i<r1;i++)
	{
		for(k=0;k<c2;k++)
		{
			for(j=0;j<c1;j++)
				sum=sum+(m1[i][j]*m2[j][k]);
			m4[i][k]=sum;
			sum=0;
		}
	}
}

void transMat(int m[10][10],int r,int c,char k[20])
{
	printf("\nMatrix Transpose(%s) :\n",k);
	for(i=0;i<c;i++)
	{	for(j=0;j<r;j++)
			printf("%d\t",m[j][i]);
		printf("\n");
	}
}

void sdp(int m[10][10],int r,int c)
{
	int t,u,v=0;
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			t=0;
			u=0;
			for(k=0;k<r;k++)
				if(m[i][j]<m[k][j])
					t++;
			for(k=0;k<c;k++)
				if(m[i][j]>m[i][k])
					u++;
			if((t==0)&&(u==0))
			{	printf("Saddle Point (%d,%d) = %d\n",i+1,j+1,m[i][j]);
				v++;
			}
		}
	}
	if(v==0)
		printf("No Saddle Point..!!\n");
}

int main()
{
	int m1[10][10],m2[10][10],r1,r2,c1,c2,ch;
	int m3[10][10],m4[10][10];
	do
	{	printf("\nMatrix Operations:\n1. Get Matrices\n2. Display Matrices\n3. Addition\n4. Multiplication\n5. Transpose\n6. Saddle Point\n7. Exit\nEnter your choice : ");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:	printf("\nEnter no. of rows in Matrix A : ");
					scanf("%d",&r1);
					printf("Enter no. of columns in Matrix A : ");
					scanf("%d",&c1);
					printf("Enter the elements in Matrix A : ");
					getMat(m1,r1,c1);
					printf("\nEnter no. of rows in Matrix B : ");
					scanf("%d",&r2);
					printf("Enter no. of columns in Matrix B : ");
					scanf("%d",&c2);
					printf("Enter the elements in Matrix B : ");
					getMat(m2,r2,c2);
					break;

			case 2:	showMat(m1,r1,c1,"A");
					showMat(m2,r2,c2,"B");
					break;

			case 3:	if((r1==r2)&&(c1==c2))
					{	addMat(m1,r1,c1,m2,r2,c2,m3);
						showMat(m3,r1,c1,"Addition Matrix");
					}else
						printf("\nCannot Add Given Matrices\n");
					break;

			case 4:	if(c1==r2)
					{	multMat(m1,r1,c1,c2,m2,m4);
						showMat(m4,r1,c2,"Matrix A X B");
					}else
						printf("\nMultiplication (A X B) Not Possible\n");
					if(c2==r1)
					{	multMat(m2,r2,c2,c1,m1,m4);
						showMat(m4,r2,c1,"Matrix B X A");
					}else
						printf("\nMultiplication (B X A) Not Possible\n");
					break;

			case 5: transMat(m1,r1,c1,"A");
					transMat(m2,r2,c2,"B");
					break;

			case 6:	printf("\nSaddle Point of Matrix A :\n");
					sdp(m1,r1,c1);
					printf("\nSaddle Point of Matrix B :\n");
					sdp(m2,r2,c2);
					break;

			case 7: return 0;

			default:printf("\nEnter Choice Between 1 - 7 Only..!!\n");
		}
	}while(ch!=7);
	return 0;
}
